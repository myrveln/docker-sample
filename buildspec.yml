# Buildspec to pull the latest version of the Docker image from docker hub and deploy it to the ECS cluster
version: 0.2

env:
  git-credential-helper: yes
  variables:
    APPLICATION: "soci-demo-soci-enabled"
phases:
  # install:
  #   runtime-versions:
  #     python: 3.11
  #   commands:
  #     - pip --disable-pip-version-check install -q flake8
  #     - nohup /usr/local/bin/dockerd --host=unix:///var/run/docker.sock --host=tcp://127.0.0.1:2375 --storage-driver=overlay2 &
  #     - timeout 15 sh -c "until docker info; do echo .; sleep 1; done"
  pre_build:
    commands:
      - aws ecr get-login-password --region ${AWS_REGION} | docker login --username AWS --password-stdin ${AWS_ACCOUNT_ID}.dkr.ecr.${AWS_REGION}.amazonaws.com
  build:
    commands:
      - export REPOSITORY_URI=${AWS_ACCOUNT_ID}.dkr.ecr.${AWS_REGION}.amazonaws.com/${APPLICATION}
      - export IMAGE_TAG="$(echo ${CODEBUILD_RESOLVED_SOURCE_VERSION} | head -c7)"
      - docker --version
      - docker build -t ${REPOSITORY_URI}:${IMAGE_TAG} .
  post_build:
    commands:
      - docker push ${REPOSITORY_URI}:${IMAGE_TAG}
      - printf '{"ImageURI":"%s"}' ${REPOSITORY_URI}:${IMAGE_TAG}  > imageDetail.json
      - sed -i 's/{{ AWS_ACCOUNT_ID }}/'${AWS_ACCOUNT_ID}'/g' taskdef.json
      - sed -i 's#{{ IMAGE_NAME }}#'${REPOSITORY_URI}'\:'${IMAGE_TAG}'#g' taskdef.json
      - cat taskdef.json
artifacts:
  files:
    - imageDetail.json
    - taskdef.json
    - appspec.yml
